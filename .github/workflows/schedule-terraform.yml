name: Schedule Terraform Apply

on:
  # PRが作成・更新されたときに実行
  pull_request:
    types: [opened, edited, labeled]
  # 定期的なスケジュールチェック（5分毎）
  schedule:
    - cron: '*/5 * * * *'

jobs:
  process-schedule:
    runs-on: ubuntu-latest
    steps:
      - name: Check scheduled applies
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const now = new Date();
            
            // terraform-scheduleラベルが付いているPRを検索
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.name,
              state: 'open',
              labels: 'terraform-schedule'
            });
            
            for (const pr of prs.data) {
              // PR本文からスケジュール情報を解析
              const scheduleMatch = pr.body.match(/schedule:\s*(\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2})/);
              if (!scheduleMatch) continue;
              
              const scheduleTime = new Date(scheduleMatch[1]);
              
              // スケジュール時刻を過ぎていて、まだ実行されていない場合
              if (scheduleTime <= now && !pr.labels.some(label => label.name === 'terraform-executed')) {
                // Atlantis applyコマンドを実行
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.name,
                  issue_number: pr.number,
                  body: 'atlantis apply'
                });
                
                // PRにexecutedラベルを追加
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.name,
                  issue_number: pr.number,
                  labels: ['terraform-executed']
                });
                
                // スケジュールラベルを削除
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.name,
                  issue_number: pr.number,
                  name: 'terraform-schedule'
                });
                
                // 実行ログをコメント
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.name,
                  issue_number: pr.number,
                  body: `🕒 Scheduled terraform apply executed at ${new Date().toISOString()}`
                });
              }
            }
